@model IEnumerable<BookNet.Models.Customer>

@{
    ViewBag.Title = "Customers";
}
<h2>Customers List</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<form class="searchForm">
    <fieldset>
        <legend>Search:</legend>
        <div class="searchField">
            First Name: @Html.TextBox("firstname")
        </div>
        <div class="searchField">
            Last Name: @Html.TextBox("lastname")
        </div>
        <div class="searchField">
            City: @Html.TextBox("city")
        </div>
        <div class="searchField">
            Phone: @Html.TextBox("PhoneNumber")
        </div>
        <input class="searchButton btn btn-default" type="submit" value="Search" />
    </fieldset>
</form>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Street)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BirthDate)
        </th>        
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.City)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Street)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PhoneNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BirthDate)
        </td>        
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ID })
        </td>
    </tr>
}

</table>

<div id="customersMap"></div>
<script>
    function initMap() {
        var mapOptions = {
            zoom: 7,
            center: new google.maps.LatLng(31.9228112, 34.9718815)
        };
        var map = new google.maps.Map($('#customersMap')[0], mapOptions);

        @foreach (var customer in Model)
        {
            <text>
            $.getJSON('http://maps.googleapis.com/maps/api/geocode/json?address=@customer.Street,@customer.City&sensor=false', null, function (data) {
                var custLocation = data.results[0].geometry.location;
                var custMarker = new google.maps.Marker({
                    position: new google.maps.LatLng(custLocation.lat, custLocation.lng),
                    map: map
                });

                var markerContent = '<div class="markerContent">@customer.FirstName @customer.LastName</div>';

                var infowindow = new google.maps.InfoWindow({
                    content: markerContent
                });

                custMarker.addListener('click', function () {
                    infowindow.open(map, custMarker);
                });
            });
            </text>
        }
    }
</script>
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCWBqFys-8rdAyBvJ5yZI2KFZfcbVzJU8Q&callback=initMap"></script>